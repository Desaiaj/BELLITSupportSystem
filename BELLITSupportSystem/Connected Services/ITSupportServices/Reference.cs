//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BELLITSupportSystem.ITSupportServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentModel", Namespace="http://schemas.datacontract.org/2004/07/BELLITSupportSystemServices")]
    [System.SerializableAttribute()]
    public partial class DepartmentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeModel", Namespace="http://schemas.datacontract.org/2004/07/BELLITSupportSystemServices")]
    [System.SerializableAttribute()]
    public partial class EmployeeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketModel", Namespace="http://schemas.datacontract.org/2004/07/BELLITSupportSystemServices")]
    [System.SerializableAttribute()]
    public partial class TicketModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RequestedONField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BELLITSupportSystem.ITSupportServices.DepartmentModel modelDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BELLITSupportSystem.ITSupportServices.EmployeeModel modelEmployeeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RequestedON {
            get {
                return this.RequestedONField;
            }
            set {
                if ((this.RequestedONField.Equals(value) != true)) {
                    this.RequestedONField = value;
                    this.RaisePropertyChanged("RequestedON");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketID {
            get {
                return this.TicketIDField;
            }
            set {
                if ((this.TicketIDField.Equals(value) != true)) {
                    this.TicketIDField = value;
                    this.RaisePropertyChanged("TicketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BELLITSupportSystem.ITSupportServices.DepartmentModel modelDepartment {
            get {
                return this.modelDepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.modelDepartmentField, value) != true)) {
                    this.modelDepartmentField = value;
                    this.RaisePropertyChanged("modelDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BELLITSupportSystem.ITSupportServices.EmployeeModel modelEmployee {
            get {
                return this.modelEmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.modelEmployeeField, value) != true)) {
                    this.modelEmployeeField = value;
                    this.RaisePropertyChanged("modelEmployee");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITSupportServices.ITicketService")]
    public interface ITicketService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetData", ReplyAction="http://tempuri.org/ITicketService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetData", ReplyAction="http://tempuri.org/ITicketService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetAllDepartments", ReplyAction="http://tempuri.org/ITicketService/GetAllDepartmentsResponse")]
        BELLITSupportSystem.ITSupportServices.DepartmentModel[] GetAllDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetAllDepartments", ReplyAction="http://tempuri.org/ITicketService/GetAllDepartmentsResponse")]
        System.Threading.Tasks.Task<BELLITSupportSystem.ITSupportServices.DepartmentModel[]> GetAllDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetAllEmployees", ReplyAction="http://tempuri.org/ITicketService/GetAllEmployeesResponse")]
        BELLITSupportSystem.ITSupportServices.EmployeeModel[] GetAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetAllEmployees", ReplyAction="http://tempuri.org/ITicketService/GetAllEmployeesResponse")]
        System.Threading.Tasks.Task<BELLITSupportSystem.ITSupportServices.EmployeeModel[]> GetAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetAllTickets", ReplyAction="http://tempuri.org/ITicketService/GetAllTicketsResponse")]
        BELLITSupportSystem.ITSupportServices.TicketModel[] GetAllTickets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetAllTickets", ReplyAction="http://tempuri.org/ITicketService/GetAllTicketsResponse")]
        System.Threading.Tasks.Task<BELLITSupportSystem.ITSupportServices.TicketModel[]> GetAllTicketsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetTicketBySearch", ReplyAction="http://tempuri.org/ITicketService/GetTicketBySearchResponse")]
        BELLITSupportSystem.ITSupportServices.TicketModel[] GetTicketBySearch(string ProjectName, string EmployeeName, string DepartmentName, string Description, string RequestedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetTicketBySearch", ReplyAction="http://tempuri.org/ITicketService/GetTicketBySearchResponse")]
        System.Threading.Tasks.Task<BELLITSupportSystem.ITSupportServices.TicketModel[]> GetTicketBySearchAsync(string ProjectName, string EmployeeName, string DepartmentName, string Description, string RequestedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/InsertTicket", ReplyAction="http://tempuri.org/ITicketService/InsertTicketResponse")]
        bool InsertTicket(string ProjectName, int EmployeeID, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/InsertTicket", ReplyAction="http://tempuri.org/ITicketService/InsertTicketResponse")]
        System.Threading.Tasks.Task<bool> InsertTicketAsync(string ProjectName, int EmployeeID, string Description);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITicketServiceChannel : BELLITSupportSystem.ITSupportServices.ITicketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TicketServiceClient : System.ServiceModel.ClientBase<BELLITSupportSystem.ITSupportServices.ITicketService>, BELLITSupportSystem.ITSupportServices.ITicketService {
        
        public TicketServiceClient() {
        }
        
        public TicketServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TicketServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TicketServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TicketServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public BELLITSupportSystem.ITSupportServices.DepartmentModel[] GetAllDepartments() {
            return base.Channel.GetAllDepartments();
        }
        
        public System.Threading.Tasks.Task<BELLITSupportSystem.ITSupportServices.DepartmentModel[]> GetAllDepartmentsAsync() {
            return base.Channel.GetAllDepartmentsAsync();
        }
        
        public BELLITSupportSystem.ITSupportServices.EmployeeModel[] GetAllEmployees() {
            return base.Channel.GetAllEmployees();
        }
        
        public System.Threading.Tasks.Task<BELLITSupportSystem.ITSupportServices.EmployeeModel[]> GetAllEmployeesAsync() {
            return base.Channel.GetAllEmployeesAsync();
        }
        
        public BELLITSupportSystem.ITSupportServices.TicketModel[] GetAllTickets() {
            return base.Channel.GetAllTickets();
        }
        
        public System.Threading.Tasks.Task<BELLITSupportSystem.ITSupportServices.TicketModel[]> GetAllTicketsAsync() {
            return base.Channel.GetAllTicketsAsync();
        }
        
        public BELLITSupportSystem.ITSupportServices.TicketModel[] GetTicketBySearch(string ProjectName, string EmployeeName, string DepartmentName, string Description, string RequestedOn) {
            return base.Channel.GetTicketBySearch(ProjectName, EmployeeName, DepartmentName, Description, RequestedOn);
        }
        
        public System.Threading.Tasks.Task<BELLITSupportSystem.ITSupportServices.TicketModel[]> GetTicketBySearchAsync(string ProjectName, string EmployeeName, string DepartmentName, string Description, string RequestedOn) {
            return base.Channel.GetTicketBySearchAsync(ProjectName, EmployeeName, DepartmentName, Description, RequestedOn);
        }
        
        public bool InsertTicket(string ProjectName, int EmployeeID, string Description) {
            return base.Channel.InsertTicket(ProjectName, EmployeeID, Description);
        }
        
        public System.Threading.Tasks.Task<bool> InsertTicketAsync(string ProjectName, int EmployeeID, string Description) {
            return base.Channel.InsertTicketAsync(ProjectName, EmployeeID, Description);
        }
    }
}
